import{a9 as b,B as y,E as s,G as v,p as h,aa as z,H as i,o as l,w as _,J as C,c as k,V as q,I as o,F as B,x as G,ab as N,n as w,ac as A}from"./CVwvMgBG.js";const I={slots:{root:"inline-flex flex-row-reverse justify-end",base:"relative rounded-full ring-bg first:me-0"},variants:{size:{"3xs":{base:"ring -me-0.5"},"2xs":{base:"ring -me-0.5"},xs:{base:"ring -me-0.5"},sm:{base:"ring-2 -me-1.5"},md:{base:"ring-2 -me-1.5"},lg:{base:"ring-2 -me-1.5"},xl:{base:"ring-3 -me-2"},"2xl":{base:"ring-3 -me-2"},"3xl":{base:"ring-3 -me-2"}}},defaultVariants:{size:"md"}},j={__name:"NuxtAvatarGroup",props:{as:{type:null,required:!1},size:{type:null,required:!1},max:{type:[Number,String],required:!1},class:{type:null,required:!1},ui:{type:null,required:!1}},setup(c){const e=c,p=b(),g=y(),n=s(()=>v({extend:v(I),...g.ui?.avatarGroup||{}})({size:e.size})),u=s(()=>typeof e.max=="string"?Number.parseInt(e.max,10):e.max),a=s(()=>{let r=p.default?.();return r?.length&&(r=r.flatMap(t=>typeof t.type=="symbol"?typeof t.children=="string"?void 0:t.children:t).filter(Boolean)),r||[]}),m=s(()=>a.value.length?!u.value||u.value<=0?[...a.value].reverse():[...a.value].slice(0,u.value).reverse():[]),f=s(()=>a.value.length?a.value.length-m.value.length:0);return h(z,s(()=>({size:e.size}))),(r,t)=>(l(),i(w(A),{as:c.as,class:o(n.value.root({class:[e.ui?.root,e.class]}))},{default:_(()=>[f.value>0?(l(),i(q,{key:0,text:`+${f.value}`,class:o(n.value.base({class:e.ui?.base}))},null,8,["text","class"])):C("",!0),(l(!0),k(B,null,G(m.value,(d,x)=>(l(),i(N(d),{key:x,class:o(n.value.base({class:e.ui?.base}))},null,8,["class"]))),128))]),_:1},8,["as","class"]))}};export{j as _};
