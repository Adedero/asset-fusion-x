/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `JointAccountModRequestApproval` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from "../pjtg";
import * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums.js";
import type * as Prisma from "../internal/prismaNamespace.js";

/**
 * Model JointAccountModRequestApproval
 *
 */
export type JointAccountModRequestApprovalModel =
  runtime.Types.Result.DefaultSelection<Prisma.$JointAccountModRequestApprovalPayload>;

export type AggregateJointAccountModRequestApproval = {
  _count: JointAccountModRequestApprovalCountAggregateOutputType | null;
  _min: JointAccountModRequestApprovalMinAggregateOutputType | null;
  _max: JointAccountModRequestApprovalMaxAggregateOutputType | null;
};

export type JointAccountModRequestApprovalMinAggregateOutputType = {
  id: string | null;
  jointAccountModRequestId: string | null;
  approverId: string | null;
  status: $Enums.JointAccountRequestStatus | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type JointAccountModRequestApprovalMaxAggregateOutputType = {
  id: string | null;
  jointAccountModRequestId: string | null;
  approverId: string | null;
  status: $Enums.JointAccountRequestStatus | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type JointAccountModRequestApprovalCountAggregateOutputType = {
  id: number;
  jointAccountModRequestId: number;
  approverId: number;
  status: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type JointAccountModRequestApprovalMinAggregateInputType = {
  id?: true;
  jointAccountModRequestId?: true;
  approverId?: true;
  status?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type JointAccountModRequestApprovalMaxAggregateInputType = {
  id?: true;
  jointAccountModRequestId?: true;
  approverId?: true;
  status?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type JointAccountModRequestApprovalCountAggregateInputType = {
  id?: true;
  jointAccountModRequestId?: true;
  approverId?: true;
  status?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type JointAccountModRequestApprovalAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which JointAccountModRequestApproval to aggregate.
   */
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JointAccountModRequestApprovals to fetch.
   */
  orderBy?:
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JointAccountModRequestApprovals from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JointAccountModRequestApprovals.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned JointAccountModRequestApprovals
   **/
  _count?: true | JointAccountModRequestApprovalCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: JointAccountModRequestApprovalMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: JointAccountModRequestApprovalMaxAggregateInputType;
};

export type GetJointAccountModRequestApprovalAggregateType<
  T extends JointAccountModRequestApprovalAggregateArgs,
> = {
  [P in keyof T & keyof AggregateJointAccountModRequestApproval]: P extends
    | "_count"
    | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateJointAccountModRequestApproval[P]>
    : Prisma.GetScalarType<T[P], AggregateJointAccountModRequestApproval[P]>;
};

export type JointAccountModRequestApprovalGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  orderBy?:
    | Prisma.JointAccountModRequestApprovalOrderByWithAggregationInput
    | Prisma.JointAccountModRequestApprovalOrderByWithAggregationInput[];
  by:
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum[]
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum;
  having?: Prisma.JointAccountModRequestApprovalScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: JointAccountModRequestApprovalCountAggregateInputType | true;
  _min?: JointAccountModRequestApprovalMinAggregateInputType;
  _max?: JointAccountModRequestApprovalMaxAggregateInputType;
};

export type JointAccountModRequestApprovalGroupByOutputType = {
  id: string;
  jointAccountModRequestId: string;
  approverId: string;
  status: $Enums.JointAccountRequestStatus;
  createdAt: Date;
  updatedAt: Date;
  _count: JointAccountModRequestApprovalCountAggregateOutputType | null;
  _min: JointAccountModRequestApprovalMinAggregateOutputType | null;
  _max: JointAccountModRequestApprovalMaxAggregateOutputType | null;
};

type GetJointAccountModRequestApprovalGroupByPayload<
  T extends JointAccountModRequestApprovalGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<
      JointAccountModRequestApprovalGroupByOutputType,
      T["by"]
    > & {
      [P in keyof T &
        keyof JointAccountModRequestApprovalGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<
              T[P],
              JointAccountModRequestApprovalGroupByOutputType[P]
            >
        : Prisma.GetScalarType<
            T[P],
            JointAccountModRequestApprovalGroupByOutputType[P]
          >;
    }
  >
>;

export type JointAccountModRequestApprovalWhereInput = {
  AND?:
    | Prisma.JointAccountModRequestApprovalWhereInput
    | Prisma.JointAccountModRequestApprovalWhereInput[];
  OR?: Prisma.JointAccountModRequestApprovalWhereInput[];
  NOT?:
    | Prisma.JointAccountModRequestApprovalWhereInput
    | Prisma.JointAccountModRequestApprovalWhereInput[];
  id?: Prisma.StringFilter<"JointAccountModRequestApproval"> | string;
  jointAccountModRequestId?:
    | Prisma.StringFilter<"JointAccountModRequestApproval">
    | string;
  approverId?: Prisma.StringFilter<"JointAccountModRequestApproval"> | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFilter<"JointAccountModRequestApproval">
    | $Enums.JointAccountRequestStatus;
  createdAt?:
    | Prisma.DateTimeFilter<"JointAccountModRequestApproval">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeFilter<"JointAccountModRequestApproval">
    | Date
    | string;
  request?: Prisma.XOR<
    Prisma.JointAccountModRequestScalarRelationFilter,
    Prisma.JointAccountModRequestWhereInput
  >;
  approver?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
};

export type JointAccountModRequestApprovalOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  jointAccountModRequestId?: Prisma.SortOrder;
  approverId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  request?: Prisma.JointAccountModRequestOrderByWithRelationInput;
  approver?: Prisma.UserOrderByWithRelationInput;
};

export type JointAccountModRequestApprovalWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?:
      | Prisma.JointAccountModRequestApprovalWhereInput
      | Prisma.JointAccountModRequestApprovalWhereInput[];
    OR?: Prisma.JointAccountModRequestApprovalWhereInput[];
    NOT?:
      | Prisma.JointAccountModRequestApprovalWhereInput
      | Prisma.JointAccountModRequestApprovalWhereInput[];
    jointAccountModRequestId?:
      | Prisma.StringFilter<"JointAccountModRequestApproval">
      | string;
    approverId?: Prisma.StringFilter<"JointAccountModRequestApproval"> | string;
    status?:
      | Prisma.EnumJointAccountRequestStatusFilter<"JointAccountModRequestApproval">
      | $Enums.JointAccountRequestStatus;
    createdAt?:
      | Prisma.DateTimeFilter<"JointAccountModRequestApproval">
      | Date
      | string;
    updatedAt?:
      | Prisma.DateTimeFilter<"JointAccountModRequestApproval">
      | Date
      | string;
    request?: Prisma.XOR<
      Prisma.JointAccountModRequestScalarRelationFilter,
      Prisma.JointAccountModRequestWhereInput
    >;
    approver?: Prisma.XOR<
      Prisma.UserScalarRelationFilter,
      Prisma.UserWhereInput
    >;
  },
  "id"
>;

export type JointAccountModRequestApprovalOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  jointAccountModRequestId?: Prisma.SortOrder;
  approverId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.JointAccountModRequestApprovalCountOrderByAggregateInput;
  _max?: Prisma.JointAccountModRequestApprovalMaxOrderByAggregateInput;
  _min?: Prisma.JointAccountModRequestApprovalMinOrderByAggregateInput;
};

export type JointAccountModRequestApprovalScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.JointAccountModRequestApprovalScalarWhereWithAggregatesInput
    | Prisma.JointAccountModRequestApprovalScalarWhereWithAggregatesInput[];
  OR?: Prisma.JointAccountModRequestApprovalScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.JointAccountModRequestApprovalScalarWhereWithAggregatesInput
    | Prisma.JointAccountModRequestApprovalScalarWhereWithAggregatesInput[];
  id?:
    | Prisma.StringWithAggregatesFilter<"JointAccountModRequestApproval">
    | string;
  jointAccountModRequestId?:
    | Prisma.StringWithAggregatesFilter<"JointAccountModRequestApproval">
    | string;
  approverId?:
    | Prisma.StringWithAggregatesFilter<"JointAccountModRequestApproval">
    | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusWithAggregatesFilter<"JointAccountModRequestApproval">
    | $Enums.JointAccountRequestStatus;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"JointAccountModRequestApproval">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<"JointAccountModRequestApproval">
    | Date
    | string;
};

export type JointAccountModRequestApprovalCreateInput = {
  id?: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  request: Prisma.JointAccountModRequestCreateNestedOneWithoutApprovalsInput;
  approver: Prisma.UserCreateNestedOneWithoutApprovedJointAccountModRequestsInput;
};

export type JointAccountModRequestApprovalUncheckedCreateInput = {
  id?: string;
  jointAccountModRequestId: string;
  approverId: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type JointAccountModRequestApprovalUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
    | $Enums.JointAccountRequestStatus;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  request?: Prisma.JointAccountModRequestUpdateOneRequiredWithoutApprovalsNestedInput;
  approver?: Prisma.UserUpdateOneRequiredWithoutApprovedJointAccountModRequestsNestedInput;
};

export type JointAccountModRequestApprovalUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  jointAccountModRequestId?: Prisma.StringFieldUpdateOperationsInput | string;
  approverId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
    | $Enums.JointAccountRequestStatus;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type JointAccountModRequestApprovalCreateManyInput = {
  id?: string;
  jointAccountModRequestId: string;
  approverId: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type JointAccountModRequestApprovalUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
    | $Enums.JointAccountRequestStatus;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type JointAccountModRequestApprovalUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  jointAccountModRequestId?: Prisma.StringFieldUpdateOperationsInput | string;
  approverId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
    | $Enums.JointAccountRequestStatus;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type JointAccountModRequestApprovalListRelationFilter = {
  every?: Prisma.JointAccountModRequestApprovalWhereInput;
  some?: Prisma.JointAccountModRequestApprovalWhereInput;
  none?: Prisma.JointAccountModRequestApprovalWhereInput;
};

export type JointAccountModRequestApprovalOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type JointAccountModRequestApprovalCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  jointAccountModRequestId?: Prisma.SortOrder;
  approverId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type JointAccountModRequestApprovalMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  jointAccountModRequestId?: Prisma.SortOrder;
  approverId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type JointAccountModRequestApprovalMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  jointAccountModRequestId?: Prisma.SortOrder;
  approverId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type JointAccountModRequestApprovalCreateNestedManyWithoutApproverInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyApproverInputEnvelope;
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
  };

export type JointAccountModRequestApprovalUncheckedCreateNestedManyWithoutApproverInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyApproverInputEnvelope;
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
  };

export type JointAccountModRequestApprovalUpdateManyWithoutApproverNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput[];
    upsert?:
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutApproverInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyApproverInputEnvelope;
    set?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    disconnect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    delete?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    update?:
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutApproverInput[];
    updateMany?:
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutApproverInput[];
    deleteMany?:
      | Prisma.JointAccountModRequestApprovalScalarWhereInput
      | Prisma.JointAccountModRequestApprovalScalarWhereInput[];
  };

export type JointAccountModRequestApprovalUncheckedUpdateManyWithoutApproverNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput[];
    upsert?:
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutApproverInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyApproverInputEnvelope;
    set?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    disconnect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    delete?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    update?:
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutApproverInput[];
    updateMany?:
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutApproverInput
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutApproverInput[];
    deleteMany?:
      | Prisma.JointAccountModRequestApprovalScalarWhereInput
      | Prisma.JointAccountModRequestApprovalScalarWhereInput[];
  };

export type JointAccountModRequestApprovalCreateNestedManyWithoutRequestInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyRequestInputEnvelope;
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
  };

export type JointAccountModRequestApprovalUncheckedCreateNestedManyWithoutRequestInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyRequestInputEnvelope;
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
  };

export type JointAccountModRequestApprovalUpdateManyWithoutRequestNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput[];
    upsert?:
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutRequestInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyRequestInputEnvelope;
    set?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    disconnect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    delete?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    update?:
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutRequestInput[];
    updateMany?:
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutRequestInput[];
    deleteMany?:
      | Prisma.JointAccountModRequestApprovalScalarWhereInput
      | Prisma.JointAccountModRequestApprovalScalarWhereInput[];
  };

export type JointAccountModRequestApprovalUncheckedUpdateManyWithoutRequestNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput,
          Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput
        >
      | Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput[]
      | Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput[];
    connectOrCreate?:
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput[];
    upsert?:
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutRequestInput[];
    createMany?: Prisma.JointAccountModRequestApprovalCreateManyRequestInputEnvelope;
    set?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    disconnect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    delete?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    connect?:
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput
      | Prisma.JointAccountModRequestApprovalWhereUniqueInput[];
    update?:
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutRequestInput[];
    updateMany?:
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutRequestInput
      | Prisma.JointAccountModRequestApprovalUpdateManyWithWhereWithoutRequestInput[];
    deleteMany?:
      | Prisma.JointAccountModRequestApprovalScalarWhereInput
      | Prisma.JointAccountModRequestApprovalScalarWhereInput[];
  };

export type JointAccountModRequestApprovalCreateWithoutApproverInput = {
  id?: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  request: Prisma.JointAccountModRequestCreateNestedOneWithoutApprovalsInput;
};

export type JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput =
  {
    id?: string;
    jointAccountModRequestId: string;
    status?: $Enums.JointAccountRequestStatus;
    createdAt?: Date | string;
    updatedAt?: Date | string;
  };

export type JointAccountModRequestApprovalCreateOrConnectWithoutApproverInput =
  {
    where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
    create: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput,
      Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput
    >;
  };

export type JointAccountModRequestApprovalCreateManyApproverInputEnvelope = {
  data:
    | Prisma.JointAccountModRequestApprovalCreateManyApproverInput
    | Prisma.JointAccountModRequestApprovalCreateManyApproverInput[];
  skipDuplicates?: boolean;
};

export type JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutApproverInput =
  {
    where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
    update: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalUpdateWithoutApproverInput,
      Prisma.JointAccountModRequestApprovalUncheckedUpdateWithoutApproverInput
    >;
    create: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalCreateWithoutApproverInput,
      Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutApproverInput
    >;
  };

export type JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutApproverInput =
  {
    where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
    data: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalUpdateWithoutApproverInput,
      Prisma.JointAccountModRequestApprovalUncheckedUpdateWithoutApproverInput
    >;
  };

export type JointAccountModRequestApprovalUpdateManyWithWhereWithoutApproverInput =
  {
    where: Prisma.JointAccountModRequestApprovalScalarWhereInput;
    data: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalUpdateManyMutationInput,
      Prisma.JointAccountModRequestApprovalUncheckedUpdateManyWithoutApproverInput
    >;
  };

export type JointAccountModRequestApprovalScalarWhereInput = {
  AND?:
    | Prisma.JointAccountModRequestApprovalScalarWhereInput
    | Prisma.JointAccountModRequestApprovalScalarWhereInput[];
  OR?: Prisma.JointAccountModRequestApprovalScalarWhereInput[];
  NOT?:
    | Prisma.JointAccountModRequestApprovalScalarWhereInput
    | Prisma.JointAccountModRequestApprovalScalarWhereInput[];
  id?: Prisma.StringFilter<"JointAccountModRequestApproval"> | string;
  jointAccountModRequestId?:
    | Prisma.StringFilter<"JointAccountModRequestApproval">
    | string;
  approverId?: Prisma.StringFilter<"JointAccountModRequestApproval"> | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFilter<"JointAccountModRequestApproval">
    | $Enums.JointAccountRequestStatus;
  createdAt?:
    | Prisma.DateTimeFilter<"JointAccountModRequestApproval">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeFilter<"JointAccountModRequestApproval">
    | Date
    | string;
};

export type JointAccountModRequestApprovalCreateWithoutRequestInput = {
  id?: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  approver: Prisma.UserCreateNestedOneWithoutApprovedJointAccountModRequestsInput;
};

export type JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput = {
  id?: string;
  approverId: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type JointAccountModRequestApprovalCreateOrConnectWithoutRequestInput = {
  where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput,
    Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput
  >;
};

export type JointAccountModRequestApprovalCreateManyRequestInputEnvelope = {
  data:
    | Prisma.JointAccountModRequestApprovalCreateManyRequestInput
    | Prisma.JointAccountModRequestApprovalCreateManyRequestInput[];
  skipDuplicates?: boolean;
};

export type JointAccountModRequestApprovalUpsertWithWhereUniqueWithoutRequestInput =
  {
    where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
    update: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalUpdateWithoutRequestInput,
      Prisma.JointAccountModRequestApprovalUncheckedUpdateWithoutRequestInput
    >;
    create: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalCreateWithoutRequestInput,
      Prisma.JointAccountModRequestApprovalUncheckedCreateWithoutRequestInput
    >;
  };

export type JointAccountModRequestApprovalUpdateWithWhereUniqueWithoutRequestInput =
  {
    where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
    data: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalUpdateWithoutRequestInput,
      Prisma.JointAccountModRequestApprovalUncheckedUpdateWithoutRequestInput
    >;
  };

export type JointAccountModRequestApprovalUpdateManyWithWhereWithoutRequestInput =
  {
    where: Prisma.JointAccountModRequestApprovalScalarWhereInput;
    data: Prisma.XOR<
      Prisma.JointAccountModRequestApprovalUpdateManyMutationInput,
      Prisma.JointAccountModRequestApprovalUncheckedUpdateManyWithoutRequestInput
    >;
  };

export type JointAccountModRequestApprovalCreateManyApproverInput = {
  id?: string;
  jointAccountModRequestId: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type JointAccountModRequestApprovalUpdateWithoutApproverInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
    | $Enums.JointAccountRequestStatus;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  request?: Prisma.JointAccountModRequestUpdateOneRequiredWithoutApprovalsNestedInput;
};

export type JointAccountModRequestApprovalUncheckedUpdateWithoutApproverInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    jointAccountModRequestId?: Prisma.StringFieldUpdateOperationsInput | string;
    status?:
      | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
      | $Enums.JointAccountRequestStatus;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  };

export type JointAccountModRequestApprovalUncheckedUpdateManyWithoutApproverInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    jointAccountModRequestId?: Prisma.StringFieldUpdateOperationsInput | string;
    status?:
      | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
      | $Enums.JointAccountRequestStatus;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  };

export type JointAccountModRequestApprovalCreateManyRequestInput = {
  id?: string;
  approverId: string;
  status?: $Enums.JointAccountRequestStatus;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type JointAccountModRequestApprovalUpdateWithoutRequestInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
    | $Enums.JointAccountRequestStatus;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  approver?: Prisma.UserUpdateOneRequiredWithoutApprovedJointAccountModRequestsNestedInput;
};

export type JointAccountModRequestApprovalUncheckedUpdateWithoutRequestInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  approverId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
    | $Enums.JointAccountRequestStatus;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type JointAccountModRequestApprovalUncheckedUpdateManyWithoutRequestInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    approverId?: Prisma.StringFieldUpdateOperationsInput | string;
    status?:
      | Prisma.EnumJointAccountRequestStatusFieldUpdateOperationsInput
      | $Enums.JointAccountRequestStatus;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  };

export type JointAccountModRequestApprovalSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    jointAccountModRequestId?: boolean;
    approverId?: boolean;
    status?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    request?: boolean | Prisma.JointAccountModRequestDefaultArgs<ExtArgs>;
    approver?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["jointAccountModRequestApproval"]
>;

export type JointAccountModRequestApprovalSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    jointAccountModRequestId?: boolean;
    approverId?: boolean;
    status?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    request?: boolean | Prisma.JointAccountModRequestDefaultArgs<ExtArgs>;
    approver?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["jointAccountModRequestApproval"]
>;

export type JointAccountModRequestApprovalSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    jointAccountModRequestId?: boolean;
    approverId?: boolean;
    status?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    request?: boolean | Prisma.JointAccountModRequestDefaultArgs<ExtArgs>;
    approver?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["jointAccountModRequestApproval"]
>;

export type JointAccountModRequestApprovalSelectScalar = {
  id?: boolean;
  jointAccountModRequestId?: boolean;
  approverId?: boolean;
  status?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type JointAccountModRequestApprovalOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "jointAccountModRequestId"
  | "approverId"
  | "status"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["jointAccountModRequestApproval"]
>;
export type JointAccountModRequestApprovalInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  request?: boolean | Prisma.JointAccountModRequestDefaultArgs<ExtArgs>;
  approver?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type JointAccountModRequestApprovalIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  request?: boolean | Prisma.JointAccountModRequestDefaultArgs<ExtArgs>;
  approver?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type JointAccountModRequestApprovalIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  request?: boolean | Prisma.JointAccountModRequestDefaultArgs<ExtArgs>;
  approver?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};

export type $JointAccountModRequestApprovalPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "JointAccountModRequestApproval";
  objects: {
    request: Prisma.$JointAccountModRequestPayload<ExtArgs>;
    approver: Prisma.$UserPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      jointAccountModRequestId: string;
      approverId: string;
      status: $Enums.JointAccountRequestStatus;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["jointAccountModRequestApproval"]
  >;
  composites: {};
};

export type JointAccountModRequestApprovalGetPayload<
  S extends
    | boolean
    | null
    | undefined
    | JointAccountModRequestApprovalDefaultArgs,
> = runtime.Types.Result.GetResult<
  Prisma.$JointAccountModRequestApprovalPayload,
  S
>;

export type JointAccountModRequestApprovalCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  JointAccountModRequestApprovalFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: JointAccountModRequestApprovalCountAggregateInputType | true;
};

export interface JointAccountModRequestApprovalDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["JointAccountModRequestApproval"];
    meta: { name: "JointAccountModRequestApproval" };
  };
  /**
   * Find zero or one JointAccountModRequestApproval that matches the filter.
   * @param {JointAccountModRequestApprovalFindUniqueArgs} args - Arguments to find a JointAccountModRequestApproval
   * @example
   * // Get one JointAccountModRequestApproval
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends JointAccountModRequestApprovalFindUniqueArgs>(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalFindUniqueArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one JointAccountModRequestApproval that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {JointAccountModRequestApprovalFindUniqueOrThrowArgs} args - Arguments to find a JointAccountModRequestApproval
   * @example
   * // Get one JointAccountModRequestApproval
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<
    T extends JointAccountModRequestApprovalFindUniqueOrThrowArgs,
  >(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first JointAccountModRequestApproval that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JointAccountModRequestApprovalFindFirstArgs} args - Arguments to find a JointAccountModRequestApproval
   * @example
   * // Get one JointAccountModRequestApproval
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends JointAccountModRequestApprovalFindFirstArgs>(
    args?: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalFindFirstArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first JointAccountModRequestApproval that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JointAccountModRequestApprovalFindFirstOrThrowArgs} args - Arguments to find a JointAccountModRequestApproval
   * @example
   * // Get one JointAccountModRequestApproval
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<
    T extends JointAccountModRequestApprovalFindFirstOrThrowArgs,
  >(
    args?: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more JointAccountModRequestApprovals that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JointAccountModRequestApprovalFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all JointAccountModRequestApprovals
   * const jointAccountModRequestApprovals = await prisma.jointAccountModRequestApproval.findMany()
   *
   * // Get first 10 JointAccountModRequestApprovals
   * const jointAccountModRequestApprovals = await prisma.jointAccountModRequestApproval.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const jointAccountModRequestApprovalWithIdOnly = await prisma.jointAccountModRequestApproval.findMany({ select: { id: true } })
   *
   */
  findMany<T extends JointAccountModRequestApprovalFindManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalFindManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a JointAccountModRequestApproval.
   * @param {JointAccountModRequestApprovalCreateArgs} args - Arguments to create a JointAccountModRequestApproval.
   * @example
   * // Create one JointAccountModRequestApproval
   * const JointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.create({
   *   data: {
   *     // ... data to create a JointAccountModRequestApproval
   *   }
   * })
   *
   */
  create<T extends JointAccountModRequestApprovalCreateArgs>(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalCreateArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many JointAccountModRequestApprovals.
   * @param {JointAccountModRequestApprovalCreateManyArgs} args - Arguments to create many JointAccountModRequestApprovals.
   * @example
   * // Create many JointAccountModRequestApprovals
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends JointAccountModRequestApprovalCreateManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalCreateManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many JointAccountModRequestApprovals and returns the data saved in the database.
   * @param {JointAccountModRequestApprovalCreateManyAndReturnArgs} args - Arguments to create many JointAccountModRequestApprovals.
   * @example
   * // Create many JointAccountModRequestApprovals
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many JointAccountModRequestApprovals and only return the `id`
   * const jointAccountModRequestApprovalWithIdOnly = await prisma.jointAccountModRequestApproval.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<
    T extends JointAccountModRequestApprovalCreateManyAndReturnArgs,
  >(
    args?: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a JointAccountModRequestApproval.
   * @param {JointAccountModRequestApprovalDeleteArgs} args - Arguments to delete one JointAccountModRequestApproval.
   * @example
   * // Delete one JointAccountModRequestApproval
   * const JointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.delete({
   *   where: {
   *     // ... filter to delete one JointAccountModRequestApproval
   *   }
   * })
   *
   */
  delete<T extends JointAccountModRequestApprovalDeleteArgs>(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalDeleteArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one JointAccountModRequestApproval.
   * @param {JointAccountModRequestApprovalUpdateArgs} args - Arguments to update one JointAccountModRequestApproval.
   * @example
   * // Update one JointAccountModRequestApproval
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends JointAccountModRequestApprovalUpdateArgs>(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalUpdateArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more JointAccountModRequestApprovals.
   * @param {JointAccountModRequestApprovalDeleteManyArgs} args - Arguments to filter JointAccountModRequestApprovals to delete.
   * @example
   * // Delete a few JointAccountModRequestApprovals
   * const { count } = await prisma.jointAccountModRequestApproval.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends JointAccountModRequestApprovalDeleteManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalDeleteManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more JointAccountModRequestApprovals.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JointAccountModRequestApprovalUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many JointAccountModRequestApprovals
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends JointAccountModRequestApprovalUpdateManyArgs>(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalUpdateManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more JointAccountModRequestApprovals and returns the data updated in the database.
   * @param {JointAccountModRequestApprovalUpdateManyAndReturnArgs} args - Arguments to update many JointAccountModRequestApprovals.
   * @example
   * // Update many JointAccountModRequestApprovals
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more JointAccountModRequestApprovals and only return the `id`
   * const jointAccountModRequestApprovalWithIdOnly = await prisma.jointAccountModRequestApproval.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<
    T extends JointAccountModRequestApprovalUpdateManyAndReturnArgs,
  >(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one JointAccountModRequestApproval.
   * @param {JointAccountModRequestApprovalUpsertArgs} args - Arguments to update or create a JointAccountModRequestApproval.
   * @example
   * // Update or create a JointAccountModRequestApproval
   * const jointAccountModRequestApproval = await prisma.jointAccountModRequestApproval.upsert({
   *   create: {
   *     // ... data to create a JointAccountModRequestApproval
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the JointAccountModRequestApproval we want to update
   *   }
   * })
   */
  upsert<T extends JointAccountModRequestApprovalUpsertArgs>(
    args: Prisma.SelectSubset<
      T,
      JointAccountModRequestApprovalUpsertArgs<ExtArgs>
    >,
  ): Prisma.Prisma__JointAccountModRequestApprovalClient<
    runtime.Types.Result.GetResult<
      Prisma.$JointAccountModRequestApprovalPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of JointAccountModRequestApprovals.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JointAccountModRequestApprovalCountArgs} args - Arguments to filter JointAccountModRequestApprovals to count.
   * @example
   * // Count the number of JointAccountModRequestApprovals
   * const count = await prisma.jointAccountModRequestApproval.count({
   *   where: {
   *     // ... the filter for the JointAccountModRequestApprovals we want to count
   *   }
   * })
   **/
  count<T extends JointAccountModRequestApprovalCountArgs>(
    args?: Prisma.Subset<T, JointAccountModRequestApprovalCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            JointAccountModRequestApprovalCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a JointAccountModRequestApproval.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JointAccountModRequestApprovalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends JointAccountModRequestApprovalAggregateArgs>(
    args: Prisma.Subset<T, JointAccountModRequestApprovalAggregateArgs>,
  ): Prisma.PrismaPromise<GetJointAccountModRequestApprovalAggregateType<T>>;

  /**
   * Group by JointAccountModRequestApproval.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JointAccountModRequestApprovalGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends JointAccountModRequestApprovalGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: JointAccountModRequestApprovalGroupByArgs["orderBy"] }
      : { orderBy?: JointAccountModRequestApprovalGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      JointAccountModRequestApprovalGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetJointAccountModRequestApprovalGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the JointAccountModRequestApproval model
   */
  readonly fields: JointAccountModRequestApprovalFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for JointAccountModRequestApproval.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__JointAccountModRequestApprovalClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  request<T extends Prisma.JointAccountModRequestDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JointAccountModRequestDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__JointAccountModRequestClient<
    | runtime.Types.Result.GetResult<
        Prisma.$JointAccountModRequestPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  approver<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the JointAccountModRequestApproval model
 */
export interface JointAccountModRequestApprovalFieldRefs {
  readonly id: Prisma.FieldRef<"JointAccountModRequestApproval", "String">;
  readonly jointAccountModRequestId: Prisma.FieldRef<
    "JointAccountModRequestApproval",
    "String"
  >;
  readonly approverId: Prisma.FieldRef<
    "JointAccountModRequestApproval",
    "String"
  >;
  readonly status: Prisma.FieldRef<
    "JointAccountModRequestApproval",
    "JointAccountRequestStatus"
  >;
  readonly createdAt: Prisma.FieldRef<
    "JointAccountModRequestApproval",
    "DateTime"
  >;
  readonly updatedAt: Prisma.FieldRef<
    "JointAccountModRequestApproval",
    "DateTime"
  >;
}

// Custom InputTypes
/**
 * JointAccountModRequestApproval findUnique
 */
export type JointAccountModRequestApprovalFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * Filter, which JointAccountModRequestApproval to fetch.
   */
  where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
};

/**
 * JointAccountModRequestApproval findUniqueOrThrow
 */
export type JointAccountModRequestApprovalFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * Filter, which JointAccountModRequestApproval to fetch.
   */
  where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
};

/**
 * JointAccountModRequestApproval findFirst
 */
export type JointAccountModRequestApprovalFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * Filter, which JointAccountModRequestApproval to fetch.
   */
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JointAccountModRequestApprovals to fetch.
   */
  orderBy?:
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for JointAccountModRequestApprovals.
   */
  cursor?: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JointAccountModRequestApprovals from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JointAccountModRequestApprovals.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of JointAccountModRequestApprovals.
   */
  distinct?:
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum[];
};

/**
 * JointAccountModRequestApproval findFirstOrThrow
 */
export type JointAccountModRequestApprovalFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * Filter, which JointAccountModRequestApproval to fetch.
   */
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JointAccountModRequestApprovals to fetch.
   */
  orderBy?:
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for JointAccountModRequestApprovals.
   */
  cursor?: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JointAccountModRequestApprovals from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JointAccountModRequestApprovals.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of JointAccountModRequestApprovals.
   */
  distinct?:
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum[];
};

/**
 * JointAccountModRequestApproval findMany
 */
export type JointAccountModRequestApprovalFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * Filter, which JointAccountModRequestApprovals to fetch.
   */
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JointAccountModRequestApprovals to fetch.
   */
  orderBy?:
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput
    | Prisma.JointAccountModRequestApprovalOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing JointAccountModRequestApprovals.
   */
  cursor?: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JointAccountModRequestApprovals from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JointAccountModRequestApprovals.
   */
  skip?: number;
  distinct?:
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum
    | Prisma.JointAccountModRequestApprovalScalarFieldEnum[];
};

/**
 * JointAccountModRequestApproval create
 */
export type JointAccountModRequestApprovalCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * The data needed to create a JointAccountModRequestApproval.
   */
  data: Prisma.XOR<
    Prisma.JointAccountModRequestApprovalCreateInput,
    Prisma.JointAccountModRequestApprovalUncheckedCreateInput
  >;
};

/**
 * JointAccountModRequestApproval createMany
 */
export type JointAccountModRequestApprovalCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many JointAccountModRequestApprovals.
   */
  data:
    | Prisma.JointAccountModRequestApprovalCreateManyInput
    | Prisma.JointAccountModRequestApprovalCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * JointAccountModRequestApproval createManyAndReturn
 */
export type JointAccountModRequestApprovalCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * The data used to create many JointAccountModRequestApprovals.
   */
  data:
    | Prisma.JointAccountModRequestApprovalCreateManyInput
    | Prisma.JointAccountModRequestApprovalCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * JointAccountModRequestApproval update
 */
export type JointAccountModRequestApprovalUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * The data needed to update a JointAccountModRequestApproval.
   */
  data: Prisma.XOR<
    Prisma.JointAccountModRequestApprovalUpdateInput,
    Prisma.JointAccountModRequestApprovalUncheckedUpdateInput
  >;
  /**
   * Choose, which JointAccountModRequestApproval to update.
   */
  where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
};

/**
 * JointAccountModRequestApproval updateMany
 */
export type JointAccountModRequestApprovalUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update JointAccountModRequestApprovals.
   */
  data: Prisma.XOR<
    Prisma.JointAccountModRequestApprovalUpdateManyMutationInput,
    Prisma.JointAccountModRequestApprovalUncheckedUpdateManyInput
  >;
  /**
   * Filter which JointAccountModRequestApprovals to update
   */
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  /**
   * Limit how many JointAccountModRequestApprovals to update.
   */
  limit?: number;
};

/**
 * JointAccountModRequestApproval updateManyAndReturn
 */
export type JointAccountModRequestApprovalUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * The data used to update JointAccountModRequestApprovals.
   */
  data: Prisma.XOR<
    Prisma.JointAccountModRequestApprovalUpdateManyMutationInput,
    Prisma.JointAccountModRequestApprovalUncheckedUpdateManyInput
  >;
  /**
   * Filter which JointAccountModRequestApprovals to update
   */
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  /**
   * Limit how many JointAccountModRequestApprovals to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * JointAccountModRequestApproval upsert
 */
export type JointAccountModRequestApprovalUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * The filter to search for the JointAccountModRequestApproval to update in case it exists.
   */
  where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
  /**
   * In case the JointAccountModRequestApproval found by the `where` argument doesn't exist, create a new JointAccountModRequestApproval with this data.
   */
  create: Prisma.XOR<
    Prisma.JointAccountModRequestApprovalCreateInput,
    Prisma.JointAccountModRequestApprovalUncheckedCreateInput
  >;
  /**
   * In case the JointAccountModRequestApproval was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.JointAccountModRequestApprovalUpdateInput,
    Prisma.JointAccountModRequestApprovalUncheckedUpdateInput
  >;
};

/**
 * JointAccountModRequestApproval delete
 */
export type JointAccountModRequestApprovalDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
  /**
   * Filter which JointAccountModRequestApproval to delete.
   */
  where: Prisma.JointAccountModRequestApprovalWhereUniqueInput;
};

/**
 * JointAccountModRequestApproval deleteMany
 */
export type JointAccountModRequestApprovalDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which JointAccountModRequestApprovals to delete
   */
  where?: Prisma.JointAccountModRequestApprovalWhereInput;
  /**
   * Limit how many JointAccountModRequestApprovals to delete.
   */
  limit?: number;
};

/**
 * JointAccountModRequestApproval without action
 */
export type JointAccountModRequestApprovalDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequestApproval
   */
  select?: Prisma.JointAccountModRequestApprovalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequestApproval
   */
  omit?: Prisma.JointAccountModRequestApprovalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestApprovalInclude<ExtArgs> | null;
};
