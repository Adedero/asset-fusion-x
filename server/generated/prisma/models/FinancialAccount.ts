/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `FinancialAccount` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from "../pjtg";
import * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums.js";
import type * as Prisma from "../internal/prismaNamespace.js";

/**
 * Model FinancialAccount
 *
 */
export type FinancialAccountModel =
  runtime.Types.Result.DefaultSelection<Prisma.$FinancialAccountPayload>;

export type AggregateFinancialAccount = {
  _count: FinancialAccountCountAggregateOutputType | null;
  _avg: FinancialAccountAvgAggregateOutputType | null;
  _sum: FinancialAccountSumAggregateOutputType | null;
  _min: FinancialAccountMinAggregateOutputType | null;
  _max: FinancialAccountMaxAggregateOutputType | null;
};

export type FinancialAccountAvgAggregateOutputType = {
  balance: number | null;
  totalTransactions: number | null;
  totalInvestments: number | null;
};

export type FinancialAccountSumAggregateOutputType = {
  balance: number | null;
  totalTransactions: number | null;
  totalInvestments: number | null;
};

export type FinancialAccountMinAggregateOutputType = {
  id: string | null;
  creatorId: string | null;
  name: string | null;
  number: string | null;
  status: $Enums.AccountStatus | null;
  type: $Enums.AccountType | null;
  ownership: $Enums.AccountOwnership | null;
  balance: number | null;
  totalTransactions: number | null;
  totalInvestments: number | null;
  firstTransactionAt: Date | null;
  lastTransactionAt: Date | null;
  closedAt: Date | null;
  dormantAt: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type FinancialAccountMaxAggregateOutputType = {
  id: string | null;
  creatorId: string | null;
  name: string | null;
  number: string | null;
  status: $Enums.AccountStatus | null;
  type: $Enums.AccountType | null;
  ownership: $Enums.AccountOwnership | null;
  balance: number | null;
  totalTransactions: number | null;
  totalInvestments: number | null;
  firstTransactionAt: Date | null;
  lastTransactionAt: Date | null;
  closedAt: Date | null;
  dormantAt: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type FinancialAccountCountAggregateOutputType = {
  id: number;
  creatorId: number;
  name: number;
  number: number;
  status: number;
  type: number;
  ownership: number;
  balance: number;
  totalTransactions: number;
  totalInvestments: number;
  firstTransactionAt: number;
  lastTransactionAt: number;
  closedAt: number;
  dormantAt: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type FinancialAccountAvgAggregateInputType = {
  balance?: true;
  totalTransactions?: true;
  totalInvestments?: true;
};

export type FinancialAccountSumAggregateInputType = {
  balance?: true;
  totalTransactions?: true;
  totalInvestments?: true;
};

export type FinancialAccountMinAggregateInputType = {
  id?: true;
  creatorId?: true;
  name?: true;
  number?: true;
  status?: true;
  type?: true;
  ownership?: true;
  balance?: true;
  totalTransactions?: true;
  totalInvestments?: true;
  firstTransactionAt?: true;
  lastTransactionAt?: true;
  closedAt?: true;
  dormantAt?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type FinancialAccountMaxAggregateInputType = {
  id?: true;
  creatorId?: true;
  name?: true;
  number?: true;
  status?: true;
  type?: true;
  ownership?: true;
  balance?: true;
  totalTransactions?: true;
  totalInvestments?: true;
  firstTransactionAt?: true;
  lastTransactionAt?: true;
  closedAt?: true;
  dormantAt?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type FinancialAccountCountAggregateInputType = {
  id?: true;
  creatorId?: true;
  name?: true;
  number?: true;
  status?: true;
  type?: true;
  ownership?: true;
  balance?: true;
  totalTransactions?: true;
  totalInvestments?: true;
  firstTransactionAt?: true;
  lastTransactionAt?: true;
  closedAt?: true;
  dormantAt?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type FinancialAccountAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which FinancialAccount to aggregate.
   */
  where?: Prisma.FinancialAccountWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FinancialAccounts to fetch.
   */
  orderBy?:
    | Prisma.FinancialAccountOrderByWithRelationInput
    | Prisma.FinancialAccountOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.FinancialAccountWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FinancialAccounts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FinancialAccounts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned FinancialAccounts
   **/
  _count?: true | FinancialAccountCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: FinancialAccountAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: FinancialAccountSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: FinancialAccountMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: FinancialAccountMaxAggregateInputType;
};

export type GetFinancialAccountAggregateType<
  T extends FinancialAccountAggregateArgs,
> = {
  [P in keyof T & keyof AggregateFinancialAccount]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateFinancialAccount[P]>
    : Prisma.GetScalarType<T[P], AggregateFinancialAccount[P]>;
};

export type FinancialAccountGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.FinancialAccountWhereInput;
  orderBy?:
    | Prisma.FinancialAccountOrderByWithAggregationInput
    | Prisma.FinancialAccountOrderByWithAggregationInput[];
  by:
    | Prisma.FinancialAccountScalarFieldEnum[]
    | Prisma.FinancialAccountScalarFieldEnum;
  having?: Prisma.FinancialAccountScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: FinancialAccountCountAggregateInputType | true;
  _avg?: FinancialAccountAvgAggregateInputType;
  _sum?: FinancialAccountSumAggregateInputType;
  _min?: FinancialAccountMinAggregateInputType;
  _max?: FinancialAccountMaxAggregateInputType;
};

export type FinancialAccountGroupByOutputType = {
  id: string;
  creatorId: string;
  name: string;
  number: string;
  status: $Enums.AccountStatus;
  type: $Enums.AccountType;
  ownership: $Enums.AccountOwnership;
  balance: number;
  totalTransactions: number;
  totalInvestments: number;
  firstTransactionAt: Date | null;
  lastTransactionAt: Date | null;
  closedAt: Date | null;
  dormantAt: Date | null;
  createdAt: Date;
  updatedAt: Date;
  _count: FinancialAccountCountAggregateOutputType | null;
  _avg: FinancialAccountAvgAggregateOutputType | null;
  _sum: FinancialAccountSumAggregateOutputType | null;
  _min: FinancialAccountMinAggregateOutputType | null;
  _max: FinancialAccountMaxAggregateOutputType | null;
};

type GetFinancialAccountGroupByPayload<T extends FinancialAccountGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<FinancialAccountGroupByOutputType, T["by"]> & {
        [P in keyof T &
          keyof FinancialAccountGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], FinancialAccountGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], FinancialAccountGroupByOutputType[P]>;
      }
    >
  >;

export type FinancialAccountWhereInput = {
  AND?: Prisma.FinancialAccountWhereInput | Prisma.FinancialAccountWhereInput[];
  OR?: Prisma.FinancialAccountWhereInput[];
  NOT?: Prisma.FinancialAccountWhereInput | Prisma.FinancialAccountWhereInput[];
  id?: Prisma.StringFilter<"FinancialAccount"> | string;
  creatorId?: Prisma.StringFilter<"FinancialAccount"> | string;
  name?: Prisma.StringFilter<"FinancialAccount"> | string;
  number?: Prisma.StringFilter<"FinancialAccount"> | string;
  status?:
    | Prisma.EnumAccountStatusFilter<"FinancialAccount">
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFilter<"FinancialAccount"> | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFilter<"FinancialAccount">
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFilter<"FinancialAccount"> | number;
  totalTransactions?: Prisma.IntFilter<"FinancialAccount"> | number;
  totalInvestments?: Prisma.IntFilter<"FinancialAccount"> | number;
  firstTransactionAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFilter<"FinancialAccount"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"FinancialAccount"> | Date | string;
  creator?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  businessProfile?: Prisma.XOR<
    Prisma.BusinessProfileNullableScalarRelationFilter,
    Prisma.BusinessProfileWhereInput
  > | null;
  accountUsers?: Prisma.AccountUserListRelationFilter;
  jointAccountRequests?: Prisma.JointAccountRequestListRelationFilter;
  jointAccountModRequests?: Prisma.JointAccountModRequestListRelationFilter;
  notifications?: Prisma.NotificationListRelationFilter;
  transactions?: Prisma.TransactionListRelationFilter;
  receivedTransactions?: Prisma.TransactionListRelationFilter;
  investments?: Prisma.InvestmentListRelationFilter;
};

export type FinancialAccountOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  creatorId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  number?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  ownership?: Prisma.SortOrder;
  balance?: Prisma.SortOrder;
  totalTransactions?: Prisma.SortOrder;
  totalInvestments?: Prisma.SortOrder;
  firstTransactionAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastTransactionAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  closedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  dormantAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  creator?: Prisma.UserOrderByWithRelationInput;
  businessProfile?: Prisma.BusinessProfileOrderByWithRelationInput;
  accountUsers?: Prisma.AccountUserOrderByRelationAggregateInput;
  jointAccountRequests?: Prisma.JointAccountRequestOrderByRelationAggregateInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestOrderByRelationAggregateInput;
  notifications?: Prisma.NotificationOrderByRelationAggregateInput;
  transactions?: Prisma.TransactionOrderByRelationAggregateInput;
  receivedTransactions?: Prisma.TransactionOrderByRelationAggregateInput;
  investments?: Prisma.InvestmentOrderByRelationAggregateInput;
};

export type FinancialAccountWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?:
      | Prisma.FinancialAccountWhereInput
      | Prisma.FinancialAccountWhereInput[];
    OR?: Prisma.FinancialAccountWhereInput[];
    NOT?:
      | Prisma.FinancialAccountWhereInput
      | Prisma.FinancialAccountWhereInput[];
    creatorId?: Prisma.StringFilter<"FinancialAccount"> | string;
    name?: Prisma.StringFilter<"FinancialAccount"> | string;
    number?: Prisma.StringFilter<"FinancialAccount"> | string;
    status?:
      | Prisma.EnumAccountStatusFilter<"FinancialAccount">
      | $Enums.AccountStatus;
    type?:
      | Prisma.EnumAccountTypeFilter<"FinancialAccount">
      | $Enums.AccountType;
    ownership?:
      | Prisma.EnumAccountOwnershipFilter<"FinancialAccount">
      | $Enums.AccountOwnership;
    balance?: Prisma.FloatFilter<"FinancialAccount"> | number;
    totalTransactions?: Prisma.IntFilter<"FinancialAccount"> | number;
    totalInvestments?: Prisma.IntFilter<"FinancialAccount"> | number;
    firstTransactionAt?:
      | Prisma.DateTimeNullableFilter<"FinancialAccount">
      | Date
      | string
      | null;
    lastTransactionAt?:
      | Prisma.DateTimeNullableFilter<"FinancialAccount">
      | Date
      | string
      | null;
    closedAt?:
      | Prisma.DateTimeNullableFilter<"FinancialAccount">
      | Date
      | string
      | null;
    dormantAt?:
      | Prisma.DateTimeNullableFilter<"FinancialAccount">
      | Date
      | string
      | null;
    createdAt?: Prisma.DateTimeFilter<"FinancialAccount"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"FinancialAccount"> | Date | string;
    creator?: Prisma.XOR<
      Prisma.UserScalarRelationFilter,
      Prisma.UserWhereInput
    >;
    businessProfile?: Prisma.XOR<
      Prisma.BusinessProfileNullableScalarRelationFilter,
      Prisma.BusinessProfileWhereInput
    > | null;
    accountUsers?: Prisma.AccountUserListRelationFilter;
    jointAccountRequests?: Prisma.JointAccountRequestListRelationFilter;
    jointAccountModRequests?: Prisma.JointAccountModRequestListRelationFilter;
    notifications?: Prisma.NotificationListRelationFilter;
    transactions?: Prisma.TransactionListRelationFilter;
    receivedTransactions?: Prisma.TransactionListRelationFilter;
    investments?: Prisma.InvestmentListRelationFilter;
  },
  "id"
>;

export type FinancialAccountOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  creatorId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  number?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  ownership?: Prisma.SortOrder;
  balance?: Prisma.SortOrder;
  totalTransactions?: Prisma.SortOrder;
  totalInvestments?: Prisma.SortOrder;
  firstTransactionAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastTransactionAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  closedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  dormantAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.FinancialAccountCountOrderByAggregateInput;
  _avg?: Prisma.FinancialAccountAvgOrderByAggregateInput;
  _max?: Prisma.FinancialAccountMaxOrderByAggregateInput;
  _min?: Prisma.FinancialAccountMinOrderByAggregateInput;
  _sum?: Prisma.FinancialAccountSumOrderByAggregateInput;
};

export type FinancialAccountScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.FinancialAccountScalarWhereWithAggregatesInput
    | Prisma.FinancialAccountScalarWhereWithAggregatesInput[];
  OR?: Prisma.FinancialAccountScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.FinancialAccountScalarWhereWithAggregatesInput
    | Prisma.FinancialAccountScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"FinancialAccount"> | string;
  creatorId?: Prisma.StringWithAggregatesFilter<"FinancialAccount"> | string;
  name?: Prisma.StringWithAggregatesFilter<"FinancialAccount"> | string;
  number?: Prisma.StringWithAggregatesFilter<"FinancialAccount"> | string;
  status?:
    | Prisma.EnumAccountStatusWithAggregatesFilter<"FinancialAccount">
    | $Enums.AccountStatus;
  type?:
    | Prisma.EnumAccountTypeWithAggregatesFilter<"FinancialAccount">
    | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipWithAggregatesFilter<"FinancialAccount">
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatWithAggregatesFilter<"FinancialAccount"> | number;
  totalTransactions?:
    | Prisma.IntWithAggregatesFilter<"FinancialAccount">
    | number;
  totalInvestments?:
    | Prisma.IntWithAggregatesFilter<"FinancialAccount">
    | number;
  firstTransactionAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"FinancialAccount">
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"FinancialAccount">
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"FinancialAccount">
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"FinancialAccount">
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"FinancialAccount">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<"FinancialAccount">
    | Date
    | string;
};

export type FinancialAccountCreateInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountCreateManyInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type FinancialAccountUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type FinancialAccountUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type FinancialAccountListRelationFilter = {
  every?: Prisma.FinancialAccountWhereInput;
  some?: Prisma.FinancialAccountWhereInput;
  none?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type FinancialAccountScalarRelationFilter = {
  is?: Prisma.FinancialAccountWhereInput;
  isNot?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  creatorId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  number?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  ownership?: Prisma.SortOrder;
  balance?: Prisma.SortOrder;
  totalTransactions?: Prisma.SortOrder;
  totalInvestments?: Prisma.SortOrder;
  firstTransactionAt?: Prisma.SortOrder;
  lastTransactionAt?: Prisma.SortOrder;
  closedAt?: Prisma.SortOrder;
  dormantAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type FinancialAccountAvgOrderByAggregateInput = {
  balance?: Prisma.SortOrder;
  totalTransactions?: Prisma.SortOrder;
  totalInvestments?: Prisma.SortOrder;
};

export type FinancialAccountMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  creatorId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  number?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  ownership?: Prisma.SortOrder;
  balance?: Prisma.SortOrder;
  totalTransactions?: Prisma.SortOrder;
  totalInvestments?: Prisma.SortOrder;
  firstTransactionAt?: Prisma.SortOrder;
  lastTransactionAt?: Prisma.SortOrder;
  closedAt?: Prisma.SortOrder;
  dormantAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type FinancialAccountMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  creatorId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  number?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  ownership?: Prisma.SortOrder;
  balance?: Prisma.SortOrder;
  totalTransactions?: Prisma.SortOrder;
  totalInvestments?: Prisma.SortOrder;
  firstTransactionAt?: Prisma.SortOrder;
  lastTransactionAt?: Prisma.SortOrder;
  closedAt?: Prisma.SortOrder;
  dormantAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type FinancialAccountSumOrderByAggregateInput = {
  balance?: Prisma.SortOrder;
  totalTransactions?: Prisma.SortOrder;
  totalInvestments?: Prisma.SortOrder;
};

export type FinancialAccountNullableScalarRelationFilter = {
  is?: Prisma.FinancialAccountWhereInput | null;
  isNot?: Prisma.FinancialAccountWhereInput | null;
};

export type FinancialAccountCreateNestedManyWithoutCreatorInput = {
  create?:
    | Prisma.XOR<
        Prisma.FinancialAccountCreateWithoutCreatorInput,
        Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput
      >
    | Prisma.FinancialAccountCreateWithoutCreatorInput[]
    | Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput[];
  createMany?: Prisma.FinancialAccountCreateManyCreatorInputEnvelope;
  connect?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
};

export type FinancialAccountUncheckedCreateNestedManyWithoutCreatorInput = {
  create?:
    | Prisma.XOR<
        Prisma.FinancialAccountCreateWithoutCreatorInput,
        Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput
      >
    | Prisma.FinancialAccountCreateWithoutCreatorInput[]
    | Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput[];
  createMany?: Prisma.FinancialAccountCreateManyCreatorInputEnvelope;
  connect?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
};

export type FinancialAccountUpdateManyWithoutCreatorNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FinancialAccountCreateWithoutCreatorInput,
        Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput
      >
    | Prisma.FinancialAccountCreateWithoutCreatorInput[]
    | Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput[];
  upsert?:
    | Prisma.FinancialAccountUpsertWithWhereUniqueWithoutCreatorInput
    | Prisma.FinancialAccountUpsertWithWhereUniqueWithoutCreatorInput[];
  createMany?: Prisma.FinancialAccountCreateManyCreatorInputEnvelope;
  set?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  disconnect?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  delete?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  connect?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  update?:
    | Prisma.FinancialAccountUpdateWithWhereUniqueWithoutCreatorInput
    | Prisma.FinancialAccountUpdateWithWhereUniqueWithoutCreatorInput[];
  updateMany?:
    | Prisma.FinancialAccountUpdateManyWithWhereWithoutCreatorInput
    | Prisma.FinancialAccountUpdateManyWithWhereWithoutCreatorInput[];
  deleteMany?:
    | Prisma.FinancialAccountScalarWhereInput
    | Prisma.FinancialAccountScalarWhereInput[];
};

export type FinancialAccountUncheckedUpdateManyWithoutCreatorNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FinancialAccountCreateWithoutCreatorInput,
        Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput
      >
    | Prisma.FinancialAccountCreateWithoutCreatorInput[]
    | Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput
    | Prisma.FinancialAccountCreateOrConnectWithoutCreatorInput[];
  upsert?:
    | Prisma.FinancialAccountUpsertWithWhereUniqueWithoutCreatorInput
    | Prisma.FinancialAccountUpsertWithWhereUniqueWithoutCreatorInput[];
  createMany?: Prisma.FinancialAccountCreateManyCreatorInputEnvelope;
  set?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  disconnect?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  delete?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  connect?:
    | Prisma.FinancialAccountWhereUniqueInput
    | Prisma.FinancialAccountWhereUniqueInput[];
  update?:
    | Prisma.FinancialAccountUpdateWithWhereUniqueWithoutCreatorInput
    | Prisma.FinancialAccountUpdateWithWhereUniqueWithoutCreatorInput[];
  updateMany?:
    | Prisma.FinancialAccountUpdateManyWithWhereWithoutCreatorInput
    | Prisma.FinancialAccountUpdateManyWithWhereWithoutCreatorInput[];
  deleteMany?:
    | Prisma.FinancialAccountScalarWhereInput
    | Prisma.FinancialAccountScalarWhereInput[];
};

export type FinancialAccountCreateNestedOneWithoutBusinessProfileInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutBusinessProfileInput,
    Prisma.FinancialAccountUncheckedCreateWithoutBusinessProfileInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutBusinessProfileInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
};

export type FinancialAccountUpdateOneRequiredWithoutBusinessProfileNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.FinancialAccountCreateWithoutBusinessProfileInput,
      Prisma.FinancialAccountUncheckedCreateWithoutBusinessProfileInput
    >;
    connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutBusinessProfileInput;
    upsert?: Prisma.FinancialAccountUpsertWithoutBusinessProfileInput;
    connect?: Prisma.FinancialAccountWhereUniqueInput;
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.FinancialAccountUpdateToOneWithWhereWithoutBusinessProfileInput,
        Prisma.FinancialAccountUpdateWithoutBusinessProfileInput
      >,
      Prisma.FinancialAccountUncheckedUpdateWithoutBusinessProfileInput
    >;
  };

export type EnumAccountStatusFieldUpdateOperationsInput = {
  set?: $Enums.AccountStatus;
};

export type EnumAccountTypeFieldUpdateOperationsInput = {
  set?: $Enums.AccountType;
};

export type EnumAccountOwnershipFieldUpdateOperationsInput = {
  set?: $Enums.AccountOwnership;
};

export type FloatFieldUpdateOperationsInput = {
  set?: number;
  increment?: number;
  decrement?: number;
  multiply?: number;
  divide?: number;
};

export type IntFieldUpdateOperationsInput = {
  set?: number;
  increment?: number;
  decrement?: number;
  multiply?: number;
  divide?: number;
};

export type FinancialAccountCreateNestedOneWithoutAccountUsersInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutAccountUsersInput,
    Prisma.FinancialAccountUncheckedCreateWithoutAccountUsersInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutAccountUsersInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
};

export type FinancialAccountUpdateOneRequiredWithoutAccountUsersNestedInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutAccountUsersInput,
    Prisma.FinancialAccountUncheckedCreateWithoutAccountUsersInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutAccountUsersInput;
  upsert?: Prisma.FinancialAccountUpsertWithoutAccountUsersInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.FinancialAccountUpdateToOneWithWhereWithoutAccountUsersInput,
      Prisma.FinancialAccountUpdateWithoutAccountUsersInput
    >,
    Prisma.FinancialAccountUncheckedUpdateWithoutAccountUsersInput
  >;
};

export type FinancialAccountCreateNestedOneWithoutJointAccountRequestsInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutJointAccountRequestsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutJointAccountRequestsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutJointAccountRequestsInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
};

export type FinancialAccountUpdateOneRequiredWithoutJointAccountRequestsNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.FinancialAccountCreateWithoutJointAccountRequestsInput,
      Prisma.FinancialAccountUncheckedCreateWithoutJointAccountRequestsInput
    >;
    connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutJointAccountRequestsInput;
    upsert?: Prisma.FinancialAccountUpsertWithoutJointAccountRequestsInput;
    connect?: Prisma.FinancialAccountWhereUniqueInput;
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.FinancialAccountUpdateToOneWithWhereWithoutJointAccountRequestsInput,
        Prisma.FinancialAccountUpdateWithoutJointAccountRequestsInput
      >,
      Prisma.FinancialAccountUncheckedUpdateWithoutJointAccountRequestsInput
    >;
  };

export type FinancialAccountCreateNestedOneWithoutJointAccountModRequestsInput =
  {
    create?: Prisma.XOR<
      Prisma.FinancialAccountCreateWithoutJointAccountModRequestsInput,
      Prisma.FinancialAccountUncheckedCreateWithoutJointAccountModRequestsInput
    >;
    connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutJointAccountModRequestsInput;
    connect?: Prisma.FinancialAccountWhereUniqueInput;
  };

export type FinancialAccountUpdateOneRequiredWithoutJointAccountModRequestsNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.FinancialAccountCreateWithoutJointAccountModRequestsInput,
      Prisma.FinancialAccountUncheckedCreateWithoutJointAccountModRequestsInput
    >;
    connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutJointAccountModRequestsInput;
    upsert?: Prisma.FinancialAccountUpsertWithoutJointAccountModRequestsInput;
    connect?: Prisma.FinancialAccountWhereUniqueInput;
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.FinancialAccountUpdateToOneWithWhereWithoutJointAccountModRequestsInput,
        Prisma.FinancialAccountUpdateWithoutJointAccountModRequestsInput
      >,
      Prisma.FinancialAccountUncheckedUpdateWithoutJointAccountModRequestsInput
    >;
  };

export type FinancialAccountCreateNestedOneWithoutInvestmentsInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutInvestmentsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutInvestmentsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutInvestmentsInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
};

export type FinancialAccountUpdateOneRequiredWithoutInvestmentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutInvestmentsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutInvestmentsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutInvestmentsInput;
  upsert?: Prisma.FinancialAccountUpsertWithoutInvestmentsInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.FinancialAccountUpdateToOneWithWhereWithoutInvestmentsInput,
      Prisma.FinancialAccountUpdateWithoutInvestmentsInput
    >,
    Prisma.FinancialAccountUncheckedUpdateWithoutInvestmentsInput
  >;
};

export type FinancialAccountCreateNestedOneWithoutTransactionsInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutTransactionsInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
};

export type FinancialAccountCreateNestedOneWithoutReceivedTransactionsInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutReceivedTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutReceivedTransactionsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutReceivedTransactionsInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
};

export type FinancialAccountUpdateOneRequiredWithoutTransactionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutTransactionsInput;
  upsert?: Prisma.FinancialAccountUpsertWithoutTransactionsInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.FinancialAccountUpdateToOneWithWhereWithoutTransactionsInput,
      Prisma.FinancialAccountUpdateWithoutTransactionsInput
    >,
    Prisma.FinancialAccountUncheckedUpdateWithoutTransactionsInput
  >;
};

export type FinancialAccountUpdateOneWithoutReceivedTransactionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutReceivedTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutReceivedTransactionsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutReceivedTransactionsInput;
  upsert?: Prisma.FinancialAccountUpsertWithoutReceivedTransactionsInput;
  disconnect?: Prisma.FinancialAccountWhereInput | boolean;
  delete?: Prisma.FinancialAccountWhereInput | boolean;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.FinancialAccountUpdateToOneWithWhereWithoutReceivedTransactionsInput,
      Prisma.FinancialAccountUpdateWithoutReceivedTransactionsInput
    >,
    Prisma.FinancialAccountUncheckedUpdateWithoutReceivedTransactionsInput
  >;
};

export type FinancialAccountCreateNestedOneWithoutNotificationsInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutNotificationsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutNotificationsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutNotificationsInput;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
};

export type FinancialAccountUpdateOneWithoutNotificationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutNotificationsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutNotificationsInput
  >;
  connectOrCreate?: Prisma.FinancialAccountCreateOrConnectWithoutNotificationsInput;
  upsert?: Prisma.FinancialAccountUpsertWithoutNotificationsInput;
  disconnect?: Prisma.FinancialAccountWhereInput | boolean;
  delete?: Prisma.FinancialAccountWhereInput | boolean;
  connect?: Prisma.FinancialAccountWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.FinancialAccountUpdateToOneWithWhereWithoutNotificationsInput,
      Prisma.FinancialAccountUpdateWithoutNotificationsInput
    >,
    Prisma.FinancialAccountUncheckedUpdateWithoutNotificationsInput
  >;
};

export type FinancialAccountCreateWithoutCreatorInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutCreatorInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutCreatorInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutCreatorInput,
    Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput
  >;
};

export type FinancialAccountCreateManyCreatorInputEnvelope = {
  data:
    | Prisma.FinancialAccountCreateManyCreatorInput
    | Prisma.FinancialAccountCreateManyCreatorInput[];
  skipDuplicates?: boolean;
};

export type FinancialAccountUpsertWithWhereUniqueWithoutCreatorInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutCreatorInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutCreatorInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutCreatorInput,
    Prisma.FinancialAccountUncheckedCreateWithoutCreatorInput
  >;
};

export type FinancialAccountUpdateWithWhereUniqueWithoutCreatorInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutCreatorInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutCreatorInput
  >;
};

export type FinancialAccountUpdateManyWithWhereWithoutCreatorInput = {
  where: Prisma.FinancialAccountScalarWhereInput;
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateManyMutationInput,
    Prisma.FinancialAccountUncheckedUpdateManyWithoutCreatorInput
  >;
};

export type FinancialAccountScalarWhereInput = {
  AND?:
    | Prisma.FinancialAccountScalarWhereInput
    | Prisma.FinancialAccountScalarWhereInput[];
  OR?: Prisma.FinancialAccountScalarWhereInput[];
  NOT?:
    | Prisma.FinancialAccountScalarWhereInput
    | Prisma.FinancialAccountScalarWhereInput[];
  id?: Prisma.StringFilter<"FinancialAccount"> | string;
  creatorId?: Prisma.StringFilter<"FinancialAccount"> | string;
  name?: Prisma.StringFilter<"FinancialAccount"> | string;
  number?: Prisma.StringFilter<"FinancialAccount"> | string;
  status?:
    | Prisma.EnumAccountStatusFilter<"FinancialAccount">
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFilter<"FinancialAccount"> | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFilter<"FinancialAccount">
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFilter<"FinancialAccount"> | number;
  totalTransactions?: Prisma.IntFilter<"FinancialAccount"> | number;
  totalInvestments?: Prisma.IntFilter<"FinancialAccount"> | number;
  firstTransactionAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.DateTimeNullableFilter<"FinancialAccount">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFilter<"FinancialAccount"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"FinancialAccount"> | Date | string;
};

export type FinancialAccountCreateWithoutBusinessProfileInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutBusinessProfileInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutBusinessProfileInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutBusinessProfileInput,
    Prisma.FinancialAccountUncheckedCreateWithoutBusinessProfileInput
  >;
};

export type FinancialAccountUpsertWithoutBusinessProfileInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutBusinessProfileInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutBusinessProfileInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutBusinessProfileInput,
    Prisma.FinancialAccountUncheckedCreateWithoutBusinessProfileInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutBusinessProfileInput = {
  where?: Prisma.FinancialAccountWhereInput;
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutBusinessProfileInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutBusinessProfileInput
  >;
};

export type FinancialAccountUpdateWithoutBusinessProfileInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutBusinessProfileInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountCreateWithoutAccountUsersInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutAccountUsersInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutAccountUsersInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutAccountUsersInput,
    Prisma.FinancialAccountUncheckedCreateWithoutAccountUsersInput
  >;
};

export type FinancialAccountUpsertWithoutAccountUsersInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutAccountUsersInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutAccountUsersInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutAccountUsersInput,
    Prisma.FinancialAccountUncheckedCreateWithoutAccountUsersInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutAccountUsersInput = {
  where?: Prisma.FinancialAccountWhereInput;
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutAccountUsersInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutAccountUsersInput
  >;
};

export type FinancialAccountUpdateWithoutAccountUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutAccountUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountCreateWithoutJointAccountRequestsInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutJointAccountRequestsInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutJointAccountRequestsInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutJointAccountRequestsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutJointAccountRequestsInput
  >;
};

export type FinancialAccountUpsertWithoutJointAccountRequestsInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutJointAccountRequestsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutJointAccountRequestsInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutJointAccountRequestsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutJointAccountRequestsInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutJointAccountRequestsInput =
  {
    where?: Prisma.FinancialAccountWhereInput;
    data: Prisma.XOR<
      Prisma.FinancialAccountUpdateWithoutJointAccountRequestsInput,
      Prisma.FinancialAccountUncheckedUpdateWithoutJointAccountRequestsInput
    >;
  };

export type FinancialAccountUpdateWithoutJointAccountRequestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutJointAccountRequestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountCreateWithoutJointAccountModRequestsInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutJointAccountModRequestsInput =
  {
    id?: string;
    creatorId: string;
    name: string;
    number: string;
    status?: $Enums.AccountStatus;
    type?: $Enums.AccountType;
    ownership?: $Enums.AccountOwnership;
    balance?: number;
    totalTransactions?: number;
    totalInvestments?: number;
    firstTransactionAt?: Date | string | null;
    lastTransactionAt?: Date | string | null;
    closedAt?: Date | string | null;
    dormantAt?: Date | string | null;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
    accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
    jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
    notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
    transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
    receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
    investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
  };

export type FinancialAccountCreateOrConnectWithoutJointAccountModRequestsInput =
  {
    where: Prisma.FinancialAccountWhereUniqueInput;
    create: Prisma.XOR<
      Prisma.FinancialAccountCreateWithoutJointAccountModRequestsInput,
      Prisma.FinancialAccountUncheckedCreateWithoutJointAccountModRequestsInput
    >;
  };

export type FinancialAccountUpsertWithoutJointAccountModRequestsInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutJointAccountModRequestsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutJointAccountModRequestsInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutJointAccountModRequestsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutJointAccountModRequestsInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutJointAccountModRequestsInput =
  {
    where?: Prisma.FinancialAccountWhereInput;
    data: Prisma.XOR<
      Prisma.FinancialAccountUpdateWithoutJointAccountModRequestsInput,
      Prisma.FinancialAccountUncheckedUpdateWithoutJointAccountModRequestsInput
    >;
  };

export type FinancialAccountUpdateWithoutJointAccountModRequestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutJointAccountModRequestsInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
    name?: Prisma.StringFieldUpdateOperationsInput | string;
    number?: Prisma.StringFieldUpdateOperationsInput | string;
    status?:
      | Prisma.EnumAccountStatusFieldUpdateOperationsInput
      | $Enums.AccountStatus;
    type?:
      | Prisma.EnumAccountTypeFieldUpdateOperationsInput
      | $Enums.AccountType;
    ownership?:
      | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
      | $Enums.AccountOwnership;
    balance?: Prisma.FloatFieldUpdateOperationsInput | number;
    totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
    totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
    firstTransactionAt?:
      | Prisma.NullableDateTimeFieldUpdateOperationsInput
      | Date
      | string
      | null;
    lastTransactionAt?:
      | Prisma.NullableDateTimeFieldUpdateOperationsInput
      | Date
      | string
      | null;
    closedAt?:
      | Prisma.NullableDateTimeFieldUpdateOperationsInput
      | Date
      | string
      | null;
    dormantAt?:
      | Prisma.NullableDateTimeFieldUpdateOperationsInput
      | Date
      | string
      | null;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
    accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
    jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
    notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
    transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
    receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
    investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  };

export type FinancialAccountCreateWithoutInvestmentsInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutInvestmentsInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutInvestmentsInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutInvestmentsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutInvestmentsInput
  >;
};

export type FinancialAccountUpsertWithoutInvestmentsInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutInvestmentsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutInvestmentsInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutInvestmentsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutInvestmentsInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutInvestmentsInput = {
  where?: Prisma.FinancialAccountWhereInput;
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutInvestmentsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutInvestmentsInput
  >;
};

export type FinancialAccountUpdateWithoutInvestmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutInvestmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
};

export type FinancialAccountCreateWithoutTransactionsInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutTransactionsInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutTransactionsInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutTransactionsInput
  >;
};

export type FinancialAccountCreateWithoutReceivedTransactionsInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutReceivedTransactionsInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutFinancialAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutReceivedTransactionsInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutReceivedTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutReceivedTransactionsInput
  >;
};

export type FinancialAccountUpsertWithoutTransactionsInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutTransactionsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutTransactionsInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutTransactionsInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutTransactionsInput = {
  where?: Prisma.FinancialAccountWhereInput;
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutTransactionsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutTransactionsInput
  >;
};

export type FinancialAccountUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUpsertWithoutReceivedTransactionsInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutReceivedTransactionsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutReceivedTransactionsInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutReceivedTransactionsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutReceivedTransactionsInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutReceivedTransactionsInput =
  {
    where?: Prisma.FinancialAccountWhereInput;
    data: Prisma.XOR<
      Prisma.FinancialAccountUpdateWithoutReceivedTransactionsInput,
      Prisma.FinancialAccountUncheckedUpdateWithoutReceivedTransactionsInput
    >;
  };

export type FinancialAccountUpdateWithoutReceivedTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutReceivedTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountCreateWithoutNotificationsInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedAccountsInput;
  businessProfile?: Prisma.BusinessProfileCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestCreateNestedManyWithoutAccountInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountUncheckedCreateWithoutNotificationsInput = {
  id?: string;
  creatorId: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedCreateNestedOneWithoutAccountInput;
  accountUsers?: Prisma.AccountUserUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedCreateNestedManyWithoutFinancialAccountInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedCreateNestedManyWithoutAccountInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutFinancialAccountInput;
  receivedTransactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutRecipientAccountInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutFinancialAccountInput;
};

export type FinancialAccountCreateOrConnectWithoutNotificationsInput = {
  where: Prisma.FinancialAccountWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutNotificationsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutNotificationsInput
  >;
};

export type FinancialAccountUpsertWithoutNotificationsInput = {
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutNotificationsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutNotificationsInput
  >;
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateWithoutNotificationsInput,
    Prisma.FinancialAccountUncheckedCreateWithoutNotificationsInput
  >;
  where?: Prisma.FinancialAccountWhereInput;
};

export type FinancialAccountUpdateToOneWithWhereWithoutNotificationsInput = {
  where?: Prisma.FinancialAccountWhereInput;
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateWithoutNotificationsInput,
    Prisma.FinancialAccountUncheckedUpdateWithoutNotificationsInput
  >;
};

export type FinancialAccountUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedAccountsNestedInput;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountCreateManyCreatorInput = {
  id?: string;
  name: string;
  number: string;
  status?: $Enums.AccountStatus;
  type?: $Enums.AccountType;
  ownership?: $Enums.AccountOwnership;
  balance?: number;
  totalTransactions?: number;
  totalInvestments?: number;
  firstTransactionAt?: Date | string | null;
  lastTransactionAt?: Date | string | null;
  closedAt?: Date | string | null;
  dormantAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type FinancialAccountUpdateWithoutCreatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateWithoutCreatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  businessProfile?: Prisma.BusinessProfileUncheckedUpdateOneWithoutAccountNestedInput;
  accountUsers?: Prisma.AccountUserUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountRequests?: Prisma.JointAccountRequestUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  jointAccountModRequests?: Prisma.JointAccountModRequestUncheckedUpdateManyWithoutAccountNestedInput;
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutFinancialAccountNestedInput;
  receivedTransactions?: Prisma.TransactionUncheckedUpdateManyWithoutRecipientAccountNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutFinancialAccountNestedInput;
};

export type FinancialAccountUncheckedUpdateManyWithoutCreatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  number?: Prisma.StringFieldUpdateOperationsInput | string;
  status?:
    | Prisma.EnumAccountStatusFieldUpdateOperationsInput
    | $Enums.AccountStatus;
  type?: Prisma.EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType;
  ownership?:
    | Prisma.EnumAccountOwnershipFieldUpdateOperationsInput
    | $Enums.AccountOwnership;
  balance?: Prisma.FloatFieldUpdateOperationsInput | number;
  totalTransactions?: Prisma.IntFieldUpdateOperationsInput | number;
  totalInvestments?: Prisma.IntFieldUpdateOperationsInput | number;
  firstTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastTransactionAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  closedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dormantAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type FinancialAccountCountOutputType
 */

export type FinancialAccountCountOutputType = {
  accountUsers: number;
  jointAccountRequests: number;
  jointAccountModRequests: number;
  notifications: number;
  transactions: number;
  receivedTransactions: number;
  investments: number;
};

export type FinancialAccountCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  accountUsers?: boolean | FinancialAccountCountOutputTypeCountAccountUsersArgs;
  jointAccountRequests?:
    | boolean
    | FinancialAccountCountOutputTypeCountJointAccountRequestsArgs;
  jointAccountModRequests?:
    | boolean
    | FinancialAccountCountOutputTypeCountJointAccountModRequestsArgs;
  notifications?:
    | boolean
    | FinancialAccountCountOutputTypeCountNotificationsArgs;
  transactions?: boolean | FinancialAccountCountOutputTypeCountTransactionsArgs;
  receivedTransactions?:
    | boolean
    | FinancialAccountCountOutputTypeCountReceivedTransactionsArgs;
  investments?: boolean | FinancialAccountCountOutputTypeCountInvestmentsArgs;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccountCountOutputType
   */
  select?: Prisma.FinancialAccountCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeCountAccountUsersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AccountUserWhereInput;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeCountJointAccountRequestsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JointAccountRequestWhereInput;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeCountJointAccountModRequestsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JointAccountModRequestWhereInput;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeCountNotificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.NotificationWhereInput;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeCountTransactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeCountReceivedTransactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * FinancialAccountCountOutputType without action
 */
export type FinancialAccountCountOutputTypeCountInvestmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InvestmentWhereInput;
};

export type FinancialAccountSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    creatorId?: boolean;
    name?: boolean;
    number?: boolean;
    status?: boolean;
    type?: boolean;
    ownership?: boolean;
    balance?: boolean;
    totalTransactions?: boolean;
    totalInvestments?: boolean;
    firstTransactionAt?: boolean;
    lastTransactionAt?: boolean;
    closedAt?: boolean;
    dormantAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    businessProfile?:
      | boolean
      | Prisma.FinancialAccount$businessProfileArgs<ExtArgs>;
    accountUsers?: boolean | Prisma.FinancialAccount$accountUsersArgs<ExtArgs>;
    jointAccountRequests?:
      | boolean
      | Prisma.FinancialAccount$jointAccountRequestsArgs<ExtArgs>;
    jointAccountModRequests?:
      | boolean
      | Prisma.FinancialAccount$jointAccountModRequestsArgs<ExtArgs>;
    notifications?:
      | boolean
      | Prisma.FinancialAccount$notificationsArgs<ExtArgs>;
    transactions?: boolean | Prisma.FinancialAccount$transactionsArgs<ExtArgs>;
    receivedTransactions?:
      | boolean
      | Prisma.FinancialAccount$receivedTransactionsArgs<ExtArgs>;
    investments?: boolean | Prisma.FinancialAccount$investmentsArgs<ExtArgs>;
    _count?:
      | boolean
      | Prisma.FinancialAccountCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["financialAccount"]
>;

export type FinancialAccountSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    creatorId?: boolean;
    name?: boolean;
    number?: boolean;
    status?: boolean;
    type?: boolean;
    ownership?: boolean;
    balance?: boolean;
    totalTransactions?: boolean;
    totalInvestments?: boolean;
    firstTransactionAt?: boolean;
    lastTransactionAt?: boolean;
    closedAt?: boolean;
    dormantAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["financialAccount"]
>;

export type FinancialAccountSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    creatorId?: boolean;
    name?: boolean;
    number?: boolean;
    status?: boolean;
    type?: boolean;
    ownership?: boolean;
    balance?: boolean;
    totalTransactions?: boolean;
    totalInvestments?: boolean;
    firstTransactionAt?: boolean;
    lastTransactionAt?: boolean;
    closedAt?: boolean;
    dormantAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["financialAccount"]
>;

export type FinancialAccountSelectScalar = {
  id?: boolean;
  creatorId?: boolean;
  name?: boolean;
  number?: boolean;
  status?: boolean;
  type?: boolean;
  ownership?: boolean;
  balance?: boolean;
  totalTransactions?: boolean;
  totalInvestments?: boolean;
  firstTransactionAt?: boolean;
  lastTransactionAt?: boolean;
  closedAt?: boolean;
  dormantAt?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type FinancialAccountOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "creatorId"
  | "name"
  | "number"
  | "status"
  | "type"
  | "ownership"
  | "balance"
  | "totalTransactions"
  | "totalInvestments"
  | "firstTransactionAt"
  | "lastTransactionAt"
  | "closedAt"
  | "dormantAt"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["financialAccount"]
>;
export type FinancialAccountInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  businessProfile?:
    | boolean
    | Prisma.FinancialAccount$businessProfileArgs<ExtArgs>;
  accountUsers?: boolean | Prisma.FinancialAccount$accountUsersArgs<ExtArgs>;
  jointAccountRequests?:
    | boolean
    | Prisma.FinancialAccount$jointAccountRequestsArgs<ExtArgs>;
  jointAccountModRequests?:
    | boolean
    | Prisma.FinancialAccount$jointAccountModRequestsArgs<ExtArgs>;
  notifications?: boolean | Prisma.FinancialAccount$notificationsArgs<ExtArgs>;
  transactions?: boolean | Prisma.FinancialAccount$transactionsArgs<ExtArgs>;
  receivedTransactions?:
    | boolean
    | Prisma.FinancialAccount$receivedTransactionsArgs<ExtArgs>;
  investments?: boolean | Prisma.FinancialAccount$investmentsArgs<ExtArgs>;
  _count?: boolean | Prisma.FinancialAccountCountOutputTypeDefaultArgs<ExtArgs>;
};
export type FinancialAccountIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type FinancialAccountIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};

export type $FinancialAccountPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "FinancialAccount";
  objects: {
    creator: Prisma.$UserPayload<ExtArgs>;
    businessProfile: Prisma.$BusinessProfilePayload<ExtArgs> | null;
    accountUsers: Prisma.$AccountUserPayload<ExtArgs>[];
    jointAccountRequests: Prisma.$JointAccountRequestPayload<ExtArgs>[];
    jointAccountModRequests: Prisma.$JointAccountModRequestPayload<ExtArgs>[];
    notifications: Prisma.$NotificationPayload<ExtArgs>[];
    transactions: Prisma.$TransactionPayload<ExtArgs>[];
    receivedTransactions: Prisma.$TransactionPayload<ExtArgs>[];
    investments: Prisma.$InvestmentPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      creatorId: string;
      name: string;
      number: string;
      status: $Enums.AccountStatus;
      type: $Enums.AccountType;
      ownership: $Enums.AccountOwnership;
      balance: number;
      totalTransactions: number;
      totalInvestments: number;
      firstTransactionAt: Date | null;
      lastTransactionAt: Date | null;
      closedAt: Date | null;
      dormantAt: Date | null;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["financialAccount"]
  >;
  composites: {};
};

export type FinancialAccountGetPayload<
  S extends boolean | null | undefined | FinancialAccountDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$FinancialAccountPayload, S>;

export type FinancialAccountCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  FinancialAccountFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: FinancialAccountCountAggregateInputType | true;
};

export interface FinancialAccountDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["FinancialAccount"];
    meta: { name: "FinancialAccount" };
  };
  /**
   * Find zero or one FinancialAccount that matches the filter.
   * @param {FinancialAccountFindUniqueArgs} args - Arguments to find a FinancialAccount
   * @example
   * // Get one FinancialAccount
   * const financialAccount = await prisma.financialAccount.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends FinancialAccountFindUniqueArgs>(
    args: Prisma.SelectSubset<T, FinancialAccountFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one FinancialAccount that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {FinancialAccountFindUniqueOrThrowArgs} args - Arguments to find a FinancialAccount
   * @example
   * // Get one FinancialAccount
   * const financialAccount = await prisma.financialAccount.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends FinancialAccountFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      FinancialAccountFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first FinancialAccount that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FinancialAccountFindFirstArgs} args - Arguments to find a FinancialAccount
   * @example
   * // Get one FinancialAccount
   * const financialAccount = await prisma.financialAccount.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends FinancialAccountFindFirstArgs>(
    args?: Prisma.SelectSubset<T, FinancialAccountFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first FinancialAccount that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FinancialAccountFindFirstOrThrowArgs} args - Arguments to find a FinancialAccount
   * @example
   * // Get one FinancialAccount
   * const financialAccount = await prisma.financialAccount.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends FinancialAccountFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      FinancialAccountFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more FinancialAccounts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FinancialAccountFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all FinancialAccounts
   * const financialAccounts = await prisma.financialAccount.findMany()
   *
   * // Get first 10 FinancialAccounts
   * const financialAccounts = await prisma.financialAccount.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const financialAccountWithIdOnly = await prisma.financialAccount.findMany({ select: { id: true } })
   *
   */
  findMany<T extends FinancialAccountFindManyArgs>(
    args?: Prisma.SelectSubset<T, FinancialAccountFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a FinancialAccount.
   * @param {FinancialAccountCreateArgs} args - Arguments to create a FinancialAccount.
   * @example
   * // Create one FinancialAccount
   * const FinancialAccount = await prisma.financialAccount.create({
   *   data: {
   *     // ... data to create a FinancialAccount
   *   }
   * })
   *
   */
  create<T extends FinancialAccountCreateArgs>(
    args: Prisma.SelectSubset<T, FinancialAccountCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many FinancialAccounts.
   * @param {FinancialAccountCreateManyArgs} args - Arguments to create many FinancialAccounts.
   * @example
   * // Create many FinancialAccounts
   * const financialAccount = await prisma.financialAccount.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends FinancialAccountCreateManyArgs>(
    args?: Prisma.SelectSubset<T, FinancialAccountCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many FinancialAccounts and returns the data saved in the database.
   * @param {FinancialAccountCreateManyAndReturnArgs} args - Arguments to create many FinancialAccounts.
   * @example
   * // Create many FinancialAccounts
   * const financialAccount = await prisma.financialAccount.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many FinancialAccounts and only return the `id`
   * const financialAccountWithIdOnly = await prisma.financialAccount.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends FinancialAccountCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      FinancialAccountCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a FinancialAccount.
   * @param {FinancialAccountDeleteArgs} args - Arguments to delete one FinancialAccount.
   * @example
   * // Delete one FinancialAccount
   * const FinancialAccount = await prisma.financialAccount.delete({
   *   where: {
   *     // ... filter to delete one FinancialAccount
   *   }
   * })
   *
   */
  delete<T extends FinancialAccountDeleteArgs>(
    args: Prisma.SelectSubset<T, FinancialAccountDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one FinancialAccount.
   * @param {FinancialAccountUpdateArgs} args - Arguments to update one FinancialAccount.
   * @example
   * // Update one FinancialAccount
   * const financialAccount = await prisma.financialAccount.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends FinancialAccountUpdateArgs>(
    args: Prisma.SelectSubset<T, FinancialAccountUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more FinancialAccounts.
   * @param {FinancialAccountDeleteManyArgs} args - Arguments to filter FinancialAccounts to delete.
   * @example
   * // Delete a few FinancialAccounts
   * const { count } = await prisma.financialAccount.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends FinancialAccountDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, FinancialAccountDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more FinancialAccounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FinancialAccountUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many FinancialAccounts
   * const financialAccount = await prisma.financialAccount.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends FinancialAccountUpdateManyArgs>(
    args: Prisma.SelectSubset<T, FinancialAccountUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more FinancialAccounts and returns the data updated in the database.
   * @param {FinancialAccountUpdateManyAndReturnArgs} args - Arguments to update many FinancialAccounts.
   * @example
   * // Update many FinancialAccounts
   * const financialAccount = await prisma.financialAccount.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more FinancialAccounts and only return the `id`
   * const financialAccountWithIdOnly = await prisma.financialAccount.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends FinancialAccountUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      FinancialAccountUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one FinancialAccount.
   * @param {FinancialAccountUpsertArgs} args - Arguments to update or create a FinancialAccount.
   * @example
   * // Update or create a FinancialAccount
   * const financialAccount = await prisma.financialAccount.upsert({
   *   create: {
   *     // ... data to create a FinancialAccount
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the FinancialAccount we want to update
   *   }
   * })
   */
  upsert<T extends FinancialAccountUpsertArgs>(
    args: Prisma.SelectSubset<T, FinancialAccountUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__FinancialAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$FinancialAccountPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of FinancialAccounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FinancialAccountCountArgs} args - Arguments to filter FinancialAccounts to count.
   * @example
   * // Count the number of FinancialAccounts
   * const count = await prisma.financialAccount.count({
   *   where: {
   *     // ... the filter for the FinancialAccounts we want to count
   *   }
   * })
   **/
  count<T extends FinancialAccountCountArgs>(
    args?: Prisma.Subset<T, FinancialAccountCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            FinancialAccountCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a FinancialAccount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FinancialAccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends FinancialAccountAggregateArgs>(
    args: Prisma.Subset<T, FinancialAccountAggregateArgs>,
  ): Prisma.PrismaPromise<GetFinancialAccountAggregateType<T>>;

  /**
   * Group by FinancialAccount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FinancialAccountGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends FinancialAccountGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: FinancialAccountGroupByArgs["orderBy"] }
      : { orderBy?: FinancialAccountGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      FinancialAccountGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetFinancialAccountGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the FinancialAccount model
   */
  readonly fields: FinancialAccountFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for FinancialAccount.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__FinancialAccountClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  creator<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  businessProfile<
    T extends Prisma.FinancialAccount$businessProfileArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.FinancialAccount$businessProfileArgs<ExtArgs>
    >,
  ): Prisma.Prisma__BusinessProfileClient<
    runtime.Types.Result.GetResult<
      Prisma.$BusinessProfilePayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  accountUsers<
    T extends Prisma.FinancialAccount$accountUsersArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.FinancialAccount$accountUsersArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AccountUserPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  jointAccountRequests<
    T extends Prisma.FinancialAccount$jointAccountRequestsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.FinancialAccount$jointAccountRequestsArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$JointAccountRequestPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  jointAccountModRequests<
    T extends Prisma.FinancialAccount$jointAccountModRequestsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.FinancialAccount$jointAccountModRequestsArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$JointAccountModRequestPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  notifications<
    T extends Prisma.FinancialAccount$notificationsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.FinancialAccount$notificationsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$NotificationPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  transactions<
    T extends Prisma.FinancialAccount$transactionsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.FinancialAccount$transactionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  receivedTransactions<
    T extends Prisma.FinancialAccount$receivedTransactionsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.FinancialAccount$receivedTransactionsArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  investments<T extends Prisma.FinancialAccount$investmentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.FinancialAccount$investmentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InvestmentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the FinancialAccount model
 */
export interface FinancialAccountFieldRefs {
  readonly id: Prisma.FieldRef<"FinancialAccount", "String">;
  readonly creatorId: Prisma.FieldRef<"FinancialAccount", "String">;
  readonly name: Prisma.FieldRef<"FinancialAccount", "String">;
  readonly number: Prisma.FieldRef<"FinancialAccount", "String">;
  readonly status: Prisma.FieldRef<"FinancialAccount", "AccountStatus">;
  readonly type: Prisma.FieldRef<"FinancialAccount", "AccountType">;
  readonly ownership: Prisma.FieldRef<"FinancialAccount", "AccountOwnership">;
  readonly balance: Prisma.FieldRef<"FinancialAccount", "Float">;
  readonly totalTransactions: Prisma.FieldRef<"FinancialAccount", "Int">;
  readonly totalInvestments: Prisma.FieldRef<"FinancialAccount", "Int">;
  readonly firstTransactionAt: Prisma.FieldRef<"FinancialAccount", "DateTime">;
  readonly lastTransactionAt: Prisma.FieldRef<"FinancialAccount", "DateTime">;
  readonly closedAt: Prisma.FieldRef<"FinancialAccount", "DateTime">;
  readonly dormantAt: Prisma.FieldRef<"FinancialAccount", "DateTime">;
  readonly createdAt: Prisma.FieldRef<"FinancialAccount", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"FinancialAccount", "DateTime">;
}

// Custom InputTypes
/**
 * FinancialAccount findUnique
 */
export type FinancialAccountFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * Filter, which FinancialAccount to fetch.
   */
  where: Prisma.FinancialAccountWhereUniqueInput;
};

/**
 * FinancialAccount findUniqueOrThrow
 */
export type FinancialAccountFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * Filter, which FinancialAccount to fetch.
   */
  where: Prisma.FinancialAccountWhereUniqueInput;
};

/**
 * FinancialAccount findFirst
 */
export type FinancialAccountFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * Filter, which FinancialAccount to fetch.
   */
  where?: Prisma.FinancialAccountWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FinancialAccounts to fetch.
   */
  orderBy?:
    | Prisma.FinancialAccountOrderByWithRelationInput
    | Prisma.FinancialAccountOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for FinancialAccounts.
   */
  cursor?: Prisma.FinancialAccountWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FinancialAccounts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FinancialAccounts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of FinancialAccounts.
   */
  distinct?:
    | Prisma.FinancialAccountScalarFieldEnum
    | Prisma.FinancialAccountScalarFieldEnum[];
};

/**
 * FinancialAccount findFirstOrThrow
 */
export type FinancialAccountFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * Filter, which FinancialAccount to fetch.
   */
  where?: Prisma.FinancialAccountWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FinancialAccounts to fetch.
   */
  orderBy?:
    | Prisma.FinancialAccountOrderByWithRelationInput
    | Prisma.FinancialAccountOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for FinancialAccounts.
   */
  cursor?: Prisma.FinancialAccountWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FinancialAccounts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FinancialAccounts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of FinancialAccounts.
   */
  distinct?:
    | Prisma.FinancialAccountScalarFieldEnum
    | Prisma.FinancialAccountScalarFieldEnum[];
};

/**
 * FinancialAccount findMany
 */
export type FinancialAccountFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * Filter, which FinancialAccounts to fetch.
   */
  where?: Prisma.FinancialAccountWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FinancialAccounts to fetch.
   */
  orderBy?:
    | Prisma.FinancialAccountOrderByWithRelationInput
    | Prisma.FinancialAccountOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing FinancialAccounts.
   */
  cursor?: Prisma.FinancialAccountWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FinancialAccounts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FinancialAccounts.
   */
  skip?: number;
  distinct?:
    | Prisma.FinancialAccountScalarFieldEnum
    | Prisma.FinancialAccountScalarFieldEnum[];
};

/**
 * FinancialAccount create
 */
export type FinancialAccountCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * The data needed to create a FinancialAccount.
   */
  data: Prisma.XOR<
    Prisma.FinancialAccountCreateInput,
    Prisma.FinancialAccountUncheckedCreateInput
  >;
};

/**
 * FinancialAccount createMany
 */
export type FinancialAccountCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many FinancialAccounts.
   */
  data:
    | Prisma.FinancialAccountCreateManyInput
    | Prisma.FinancialAccountCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * FinancialAccount createManyAndReturn
 */
export type FinancialAccountCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * The data used to create many FinancialAccounts.
   */
  data:
    | Prisma.FinancialAccountCreateManyInput
    | Prisma.FinancialAccountCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * FinancialAccount update
 */
export type FinancialAccountUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * The data needed to update a FinancialAccount.
   */
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateInput,
    Prisma.FinancialAccountUncheckedUpdateInput
  >;
  /**
   * Choose, which FinancialAccount to update.
   */
  where: Prisma.FinancialAccountWhereUniqueInput;
};

/**
 * FinancialAccount updateMany
 */
export type FinancialAccountUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update FinancialAccounts.
   */
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateManyMutationInput,
    Prisma.FinancialAccountUncheckedUpdateManyInput
  >;
  /**
   * Filter which FinancialAccounts to update
   */
  where?: Prisma.FinancialAccountWhereInput;
  /**
   * Limit how many FinancialAccounts to update.
   */
  limit?: number;
};

/**
 * FinancialAccount updateManyAndReturn
 */
export type FinancialAccountUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * The data used to update FinancialAccounts.
   */
  data: Prisma.XOR<
    Prisma.FinancialAccountUpdateManyMutationInput,
    Prisma.FinancialAccountUncheckedUpdateManyInput
  >;
  /**
   * Filter which FinancialAccounts to update
   */
  where?: Prisma.FinancialAccountWhereInput;
  /**
   * Limit how many FinancialAccounts to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * FinancialAccount upsert
 */
export type FinancialAccountUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * The filter to search for the FinancialAccount to update in case it exists.
   */
  where: Prisma.FinancialAccountWhereUniqueInput;
  /**
   * In case the FinancialAccount found by the `where` argument doesn't exist, create a new FinancialAccount with this data.
   */
  create: Prisma.XOR<
    Prisma.FinancialAccountCreateInput,
    Prisma.FinancialAccountUncheckedCreateInput
  >;
  /**
   * In case the FinancialAccount was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.FinancialAccountUpdateInput,
    Prisma.FinancialAccountUncheckedUpdateInput
  >;
};

/**
 * FinancialAccount delete
 */
export type FinancialAccountDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
  /**
   * Filter which FinancialAccount to delete.
   */
  where: Prisma.FinancialAccountWhereUniqueInput;
};

/**
 * FinancialAccount deleteMany
 */
export type FinancialAccountDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which FinancialAccounts to delete
   */
  where?: Prisma.FinancialAccountWhereInput;
  /**
   * Limit how many FinancialAccounts to delete.
   */
  limit?: number;
};

/**
 * FinancialAccount.businessProfile
 */
export type FinancialAccount$businessProfileArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BusinessProfile
   */
  select?: Prisma.BusinessProfileSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BusinessProfile
   */
  omit?: Prisma.BusinessProfileOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BusinessProfileInclude<ExtArgs> | null;
  where?: Prisma.BusinessProfileWhereInput;
};

/**
 * FinancialAccount.accountUsers
 */
export type FinancialAccount$accountUsersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AccountUser
   */
  select?: Prisma.AccountUserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AccountUser
   */
  omit?: Prisma.AccountUserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountUserInclude<ExtArgs> | null;
  where?: Prisma.AccountUserWhereInput;
  orderBy?:
    | Prisma.AccountUserOrderByWithRelationInput
    | Prisma.AccountUserOrderByWithRelationInput[];
  cursor?: Prisma.AccountUserWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AccountUserScalarFieldEnum
    | Prisma.AccountUserScalarFieldEnum[];
};

/**
 * FinancialAccount.jointAccountRequests
 */
export type FinancialAccount$jointAccountRequestsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountRequest
   */
  select?: Prisma.JointAccountRequestSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountRequest
   */
  omit?: Prisma.JointAccountRequestOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountRequestInclude<ExtArgs> | null;
  where?: Prisma.JointAccountRequestWhereInput;
  orderBy?:
    | Prisma.JointAccountRequestOrderByWithRelationInput
    | Prisma.JointAccountRequestOrderByWithRelationInput[];
  cursor?: Prisma.JointAccountRequestWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.JointAccountRequestScalarFieldEnum
    | Prisma.JointAccountRequestScalarFieldEnum[];
};

/**
 * FinancialAccount.jointAccountModRequests
 */
export type FinancialAccount$jointAccountModRequestsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JointAccountModRequest
   */
  select?: Prisma.JointAccountModRequestSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JointAccountModRequest
   */
  omit?: Prisma.JointAccountModRequestOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JointAccountModRequestInclude<ExtArgs> | null;
  where?: Prisma.JointAccountModRequestWhereInput;
  orderBy?:
    | Prisma.JointAccountModRequestOrderByWithRelationInput
    | Prisma.JointAccountModRequestOrderByWithRelationInput[];
  cursor?: Prisma.JointAccountModRequestWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.JointAccountModRequestScalarFieldEnum
    | Prisma.JointAccountModRequestScalarFieldEnum[];
};

/**
 * FinancialAccount.notifications
 */
export type FinancialAccount$notificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null;
  where?: Prisma.NotificationWhereInput;
  orderBy?:
    | Prisma.NotificationOrderByWithRelationInput
    | Prisma.NotificationOrderByWithRelationInput[];
  cursor?: Prisma.NotificationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.NotificationScalarFieldEnum
    | Prisma.NotificationScalarFieldEnum[];
};

/**
 * FinancialAccount.transactions
 */
export type FinancialAccount$transactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * FinancialAccount.receivedTransactions
 */
export type FinancialAccount$receivedTransactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * FinancialAccount.investments
 */
export type FinancialAccount$investmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Investment
   */
  select?: Prisma.InvestmentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Investment
   */
  omit?: Prisma.InvestmentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvestmentInclude<ExtArgs> | null;
  where?: Prisma.InvestmentWhereInput;
  orderBy?:
    | Prisma.InvestmentOrderByWithRelationInput
    | Prisma.InvestmentOrderByWithRelationInput[];
  cursor?: Prisma.InvestmentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InvestmentScalarFieldEnum
    | Prisma.InvestmentScalarFieldEnum[];
};

/**
 * FinancialAccount without action
 */
export type FinancialAccountDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FinancialAccount
   */
  select?: Prisma.FinancialAccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FinancialAccount
   */
  omit?: Prisma.FinancialAccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FinancialAccountInclude<ExtArgs> | null;
};
